{"ast":null,"code":"class StickyNavigation {\n  constructor() {\n    this.currentId = null;\n    this.currentTab = null;\n    this.tabContainerHeight = 70;\n    let self = this;\n    $(\".et-hero-tab\").click(function () {\n      self.onTabClick(event, $(this));\n    });\n    $(window).scroll(() => {\n      this.onScroll();\n    });\n    $(window).resize(() => {\n      this.onResize();\n    });\n  }\n\n  onTabClick(event, element) {\n    event.preventDefault();\n    let scrollTop = $(element.attr(\"href\")).offset().top - this.tabContainerHeight + 1;\n    $(\"html, body\").animate({\n      scrollTop: scrollTop\n    }, 600);\n  }\n\n  onScroll() {\n    this.checkTabContainerPosition();\n    this.findCurrentTabSelector();\n  }\n\n  onResize() {\n    if (this.currentId) {\n      this.setSliderCss();\n    }\n  }\n\n  checkTabContainerPosition() {\n    let offset = $(\".et-hero-tabs\").offset().top + $(\".et-hero-tabs\").height() - this.tabContainerHeight;\n\n    if ($(window).scrollTop() > offset) {\n      $(\".et-hero-tabs-container\").addClass(\"et-hero-tabs-container--top\");\n    } else {\n      $(\".et-hero-tabs-container\").removeClass(\"et-hero-tabs-container--top\");\n    }\n  }\n\n  findCurrentTabSelector(element) {\n    let newCurrentId;\n    let newCurrentTab;\n    let self = this;\n    $(\".et-hero-tab\").each(function () {\n      let id = $(this).attr(\"href\");\n      let offsetTop = $(id).offset().top - self.tabContainerHeight;\n      let offsetBottom = $(id).offset().top + $(id).height() - self.tabContainerHeight;\n\n      if ($(window).scrollTop() > offsetTop && $(window).scrollTop() < offsetBottom) {\n        newCurrentId = id;\n        newCurrentTab = $(this);\n      }\n    });\n\n    if (this.currentId != newCurrentId || this.currentId === null) {\n      this.currentId = newCurrentId;\n      this.currentTab = newCurrentTab;\n      this.setSliderCss();\n    }\n  }\n\n  setSliderCss() {\n    let width = 0;\n    let left = 0;\n\n    if (this.currentTab) {\n      width = this.currentTab.css(\"width\");\n      left = this.currentTab.offset().left;\n    }\n\n    $(\".et-hero-tab-slider\").css(\"width\", width);\n    $(\".et-hero-tab-slider\").css(\"left\", left);\n  }\n\n}\n\nnew StickyNavigation();","map":{"version":3,"sources":["/Users/sam/Desktop/CodeFiles/ReactPractice1/tutorial/src/index.js"],"names":["StickyNavigation","constructor","currentId","currentTab","tabContainerHeight","self","$","click","onTabClick","event","window","scroll","onScroll","resize","onResize","element","preventDefault","scrollTop","attr","offset","top","animate","checkTabContainerPosition","findCurrentTabSelector","setSliderCss","height","addClass","removeClass","newCurrentId","newCurrentTab","each","id","offsetTop","offsetBottom","width","left","css"],"mappings":"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","sourcesContent":["class StickyNavigation {\n  constructor() {\n    this.currentId = null;\n    this.currentTab = null;\n    this.tabContainerHeight = 70;\n    let self = this;\n    $(\".et-hero-tab\").click(function () {\n      self.onTabClick(event, $(this));\n    });\n    $(window).scroll(() => {\n      this.onScroll();\n    });\n    $(window).resize(() => {\n      this.onResize();\n    });\n  }\n\n  onTabClick(event, element) {\n    event.preventDefault();\n    let scrollTop =\n      $(element.attr(\"href\")).offset().top - this.tabContainerHeight + 1;\n    $(\"html, body\").animate({ scrollTop: scrollTop }, 600);\n  }\n\n  onScroll() {\n    this.checkTabContainerPosition();\n    this.findCurrentTabSelector();\n  }\n\n  onResize() {\n    if (this.currentId) {\n      this.setSliderCss();\n    }\n  }\n\n  checkTabContainerPosition() {\n    let offset =\n      $(\".et-hero-tabs\").offset().top +\n      $(\".et-hero-tabs\").height() -\n      this.tabContainerHeight;\n    if ($(window).scrollTop() > offset) {\n      $(\".et-hero-tabs-container\").addClass(\"et-hero-tabs-container--top\");\n    } else {\n      $(\".et-hero-tabs-container\").removeClass(\"et-hero-tabs-container--top\");\n    }\n  }\n\n  findCurrentTabSelector(element) {\n    let newCurrentId;\n    let newCurrentTab;\n    let self = this;\n    $(\".et-hero-tab\").each(function () {\n      let id = $(this).attr(\"href\");\n      let offsetTop = $(id).offset().top - self.tabContainerHeight;\n      let offsetBottom =\n        $(id).offset().top + $(id).height() - self.tabContainerHeight;\n      if (\n        $(window).scrollTop() > offsetTop &&\n        $(window).scrollTop() < offsetBottom\n      ) {\n        newCurrentId = id;\n        newCurrentTab = $(this);\n      }\n    });\n    if (this.currentId != newCurrentId || this.currentId === null) {\n      this.currentId = newCurrentId;\n      this.currentTab = newCurrentTab;\n      this.setSliderCss();\n    }\n  }\n\n  setSliderCss() {\n    let width = 0;\n    let left = 0;\n    if (this.currentTab) {\n      width = this.currentTab.css(\"width\");\n      left = this.currentTab.offset().left;\n    }\n    $(\".et-hero-tab-slider\").css(\"width\", width);\n    $(\".et-hero-tab-slider\").css(\"left\", left);\n  }\n}\n\nnew StickyNavigation();\n"]},"metadata":{},"sourceType":"module"}